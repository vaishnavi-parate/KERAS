from tensorflow.keras.datasets import imdbfrom tensorflow.keras.preprocessing.sequence import pad_sequencesfrom tensorflow.keras.models import Sequentialfrom tensorflow.keras.layers import Embedding, Flatten, Denseimport matplotlib.pyplot as plt%matplotlib inlinenum_words = 10000  # use top 10,000 words(x_train, y_train), (x_test, y_test) = imdb.load_data(num_words=num_words)maxlen = 500  # max length of each reviewx_train = pad_sequences(x_train, maxlen=maxlen)x_test = pad_sequences(x_test, maxlen=maxlen)model = Sequential([    Embedding(input_dim=num_words, output_dim=32, input_length=maxlen),    Flatten(),    Dense(64, activation='relu'),    Dense(1, activation='sigmoid')])model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])history=model.fit(x_train, y_train, epochs=5, batch_size=64, validation_split=0.2)plt.plot(history.history['accuracy'],label='Train')plt.plot(history.history['val_accuracy'],label='Validation')plt.legend(),plt.title('Accuracy'),plt.xlabel('Epoch'),plt.ylabel('Accuracy')plt.show()loss, accuracy = model.evaluate(x_test, y_test)print(f"Test Accuracy: {accuracy:.2f}")