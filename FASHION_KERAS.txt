import tensorflow as tffrom tensorflow.keras import layers, modelsimport matplotlib.pyplot as pltfashion_mnist = tf.keras.datasets.fashion_mnist(X_train, y_train), (X_test, y_test) = fashion_mnist.load_data()X_train = X_train / 255.0X_test = X_test / 255.0X_train = X_train.reshape(-1, 28, 28, 1)X_test = X_test.reshape(-1, 28, 28, 1)class_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat',               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']model = models.Sequential([    layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)),    layers.MaxPooling2D((2, 2)),    layers.Conv2D(64, (3, 3), activation='relu'),    layers.MaxPooling2D((2, 2)),    layers.Flatten(),    layers.Dense(128, activation='relu'),    layers.Dense(10, activation='softmax')  # 10 classes])model.compile(optimizer='adam',              loss='sparse_categorical_crossentropy',              metrics=['accuracy'])history=model.fit(X_train, y_train, epochs=10, validation_data=(X_test, y_test))test_loss, test_acc = model.evaluate(X_test, y_test, verbose=2)print(f"\nTest accuracy: {test_acc:.4f}")predictions = model.predict(X_test)plt.plot(history.history['accuracy'],label='Train')plt.plot(history.history['val_accuracy'],label='Validation')plt.legend(),plt.title('Accuracy'),plt.xlabel('Epoch'),plt.ylabel('Accuracy')plt.show()

plt.figure(figsize=(10, 6))
for i in range(10):
    plt.subplot(2, 5, i+1)
    plt.xticks([])
    plt.yticks([])
    plt.grid(False)
    plt.imshow(X_test[i].reshape(28, 28), cmap=plt.cm.binary)
    plt.xlabel(f"Pred: {class_names[predictions[i].argmax()]}")
plt.tight_layout()
plt.show()
