import tensorflow as tffrom tensorflow.keras.models import Sequentialfrom tensorflow.keras.layers import Densefrom sklearn.preprocessing import StandardScalerfrom sklearn.model_selection import train_test_splitimport numpy as npimport matplotlib.pyplot as plt%matplotlib inlinefrom tensorflow.keras.datasets import boston_housing(x_train, y_train), (x_test, y_test) = boston_housing.load_data()scaler = StandardScaler()x_train = scaler.fit_transform(x_train)x_test = scaler.transform(x_test)model = Sequential([    Dense(64, activation='relu', input_shape=(13,)),    Dense(32, activation='relu'),    Dense(1)  # Output layer with 1 neuron (regression output)])model.compile(optimizer='adam', loss='mse', metrics=['mae'])history=model.fit(x_train, y_train, epochs=100, validation_split=0.2, verbose=1)plt.plot(history.history['mae'],label='Train')plt.plot(history.history['val_mae'],label='Validation')plt.legend(),plt.title('Mean Absolute Error'),plt.xlabel('Epochs'),plt.ylabel('MAE')plt.show()loss, mae = model.evaluate(x_test, y_test, verbose=2)print(f"Test Mean Absolute Error: {mae:.2f}")